#!/bin/sh

# Pre-commit hook for SwiftLint
# This script runs SwiftLint on staged Swift files before committing

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "${YELLOW}🔍 Running SwiftLint...${NC}"

# Check if SwiftLint is installed
if ! command -v swiftlint &> /dev/null; then
    echo "${RED}❌ SwiftLint is not installed. Please install it first:${NC}"
    echo "${YELLOW}   brew install swiftlint${NC}"
    echo "${RED}   or visit: https://github.com/realm/SwiftLint${NC}"
    exit 1
fi

# Get list of staged Swift files
STAGED_SWIFT_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(swift)$')

if [ -z "$STAGED_SWIFT_FILES" ]; then
    echo "${GREEN}✅ No Swift files to lint${NC}"
    exit 0
fi

echo "${YELLOW}📝 Linting staged Swift files:${NC}"
echo "$STAGED_SWIFT_FILES" | sed 's/^/   /'

# Run SwiftLint on staged files
LINT_RESULT=0

# Create temporary file list for SwiftLint
TEMP_FILE_LIST=$(mktemp)
echo "$STAGED_SWIFT_FILES" > "$TEMP_FILE_LIST"

# Run SwiftLint only on staged files
swiftlint lint --use-stdin-filename < "$TEMP_FILE_LIST"
LINT_RESULT=$?

# Clean up
rm "$TEMP_FILE_LIST"

# Alternative approach: lint each file individually
if [ $LINT_RESULT -ne 0 ]; then
    echo "${RED}❌ SwiftLint found issues. Please fix them before committing.${NC}"
    echo "${YELLOW}💡 You can run 'swiftlint lint --fix' to auto-fix some issues${NC}"
    exit 1
fi

echo "${GREEN}✅ SwiftLint passed! Proceeding with commit...${NC}"
exit 0