#!/bin/sh

# Pre-commit hook for SwiftLint
# This script runs SwiftLint on staged Swift files before committing

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "${YELLOW}üîç Running SwiftLint...${NC}"

# Check if SwiftLint is installed
if ! command -v swiftlint &> /dev/null; then
    echo "${RED}‚ùå SwiftLint is not installed. Please install it first:${NC}"
    echo "${YELLOW}   brew install swiftlint${NC}"
    echo "${RED}   or visit: https://github.com/realm/SwiftLint${NC}"
    exit 1
fi

# Get list of staged Swift files
STAGED_SWIFT_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(swift)$')

if [ -z "$STAGED_SWIFT_FILES" ]; then
    echo "${GREEN}‚úÖ No Swift files to lint${NC}"
    exit 0
fi

echo "${YELLOW}üìù Linting staged Swift files:${NC}"
echo "$STAGED_SWIFT_FILES" | sed 's/^/   /'

# Run SwiftLint on staged files
LINT_RESULT=0

# Run SwiftLint on all staged files at once
echo "$STAGED_SWIFT_FILES" | tr '\n' '\0' | xargs -0 swiftlint lint --quiet
LINT_RESULT=$?

if [ $LINT_RESULT -ne 0 ]; then
    echo "${RED}‚ùå SwiftLint found issues. Please fix them before committing.${NC}"
    echo "${YELLOW}üí° You can run 'swiftlint lint --fix' to auto-fix some issues${NC}"
    exit 1
fi

echo "${GREEN}‚úÖ SwiftLint passed! Proceeding with commit...${NC}"
exit 0